<?xml version="1.0" encoding="utf-8"?><rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>leenadz</title><link>https://zdaneel.github.io/</link><description>记录奇思妙想</description><generator>Hugo 0.127.0 https://gohugo.io/</generator><language>zh-CN</language><managingEditor>z1436910962@gmail.com (leenadz)</managingEditor><webMaster>z1436910962@gmail.com (leenadz)</webMaster><copyright>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</copyright><lastBuildDate>Sun, 09 Jun 2024 12:49:13 +0000</lastBuildDate><atom:link rel="self" type="application/rss+xml" href="https://zdaneel.github.io/rss.xml"/><item><title>xv6在m1mac上安装以及在vscode里debug.md</title><link>https://zdaneel.github.io/tech/xv6%E5%9C%A8m1mac%E4%B8%8A%E5%AE%89%E8%A3%85%E4%BB%A5%E5%8F%8A%E5%9C%A8vscode%E9%87%8Cdebug/</link><guid isPermaLink="true">https://zdaneel.github.io/tech/xv6%E5%9C%A8m1mac%E4%B8%8A%E5%AE%89%E8%A3%85%E4%BB%A5%E5%8F%8A%E5%9C%A8vscode%E9%87%8Cdebug/</guid><pubDate>Thu, 09 Nov 2023 15:50:36 +0800</pubDate><author>z1436910962@gmail.com (leenadz)</author><copyright>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</copyright><description>&lt;h2 id="环境">环境：&lt;/h2>
&lt;p>电脑型号：MacBook Air (M1, 2020)&lt;/p>
&lt;p>系统版本：macOS Sonoma 14.0&lt;/p>
&lt;h2 id="一安装">一、安装&lt;/h2>
&lt;blockquote>
&lt;p>参考 &lt;a href="https://zhuanlan.zhihu.com/p/464386728">https://zhuanlan.zhihu.com/p/464386728&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;h3 id="riscv-gnu-toolchain">riscv-gnu-toolchain&lt;/h3>
&lt;p>使用链接中的2源码编译安装，其百度网盘文件编译没有产生问题&lt;/p>
&lt;h3 id="qemu">qemu&lt;/h3>
&lt;p>QEMU emulator version 8.1.2&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">brew install qemu
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="二vscode调试">二、vscode调试&lt;/h2>
&lt;h3 id="xv6启动">xv6启动&lt;/h3>
&lt;p>在xv6目录下使用&lt;code>make CPUS=1 qemu-gdb&lt;/code>，记住最后的端口号&lt;/p>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/ZDaneel/cloudimg@main/img/202311092204946.png" alt="image-20231109220205651">&lt;/p>
&lt;h3 id="配置文件">配置文件&lt;/h3>
&lt;h4 id="1-gdbinit">1. .gdbinit&lt;/h4>
&lt;blockquote>
&lt;p>mac下查看隐藏文件快捷键&lt;code>cmd+shift+.&lt;/code>&lt;/p>
&lt;/blockquote>
&lt;p>在主目录&lt;code>~&lt;/code>下创建一个&lt;code>.gdbinit&lt;/code>,从而使得gdb启动时能够读取xv6目录下的&lt;code>.gdbinit&lt;/code>&lt;/p>
&lt;p>初始化gdb，从而无需在每次打开gdb时重复配置&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">add-auto-load-safe-path &lt;span class="o">{&lt;/span>YourPath&lt;span class="o">}&lt;/span>/xv6-riscv/.gdbinit
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h4 id="2-launchjson和tasksjson">2. launch.json和tasks.json&lt;/h4>
&lt;p>在xv6目录下的&lt;code>.vscode&lt;/code>文件夹中创建两个文件，tasks是复数&lt;/p>
&lt;p>launch.json&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-json" data-lang="json">&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// Use IntelliSense to learn about possible attributes.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="c1">// Hover to view descriptions of existing attributes.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="c1">// For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="nt">&amp;#34;version&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;0.2.0&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;configurations&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;name&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;Debug&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;type&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;cppdbg&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;request&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;launch&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;program&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;${workspaceFolder}/kernel/kernel&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;cwd&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;${workspaceFolder}&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;miDebuggerPath&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;/opt/riscv-gnu-toolchain/bin/riscv64-unknown-elf-gdb&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1">// 可能需要更改
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="nt">&amp;#34;miDebuggerServerAddress&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;127.0.0.1:YourPort&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1">// 修改端口
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="nt">&amp;#34;MIMode&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;gdb&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;stopAtEntry&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">true&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;preLaunchTask&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;fix_gdbinit&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;setupCommands&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;description&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;Enable pretty-printing for gdb&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;text&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;-enable-pretty-printing&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;ignoreFailures&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">false&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>tasks.json&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-json" data-lang="json">&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;version&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;2.0.0&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;tasks&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;label&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;fix_gdbinit&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;type&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;shell&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;command&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;sed -i &amp;#39;&amp;#39; -e &amp;#39;/^target remote/d&amp;#39; ${workspaceFolder}/.gdbinit&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>之后启动vscode的debug，如果一切正常，如下图所示。就可以欢乐调试了。&lt;/p>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/ZDaneel/cloudimg@main/img/202311092216400.png" alt="image-20231109221637470">&lt;/p>
&lt;h2 id="三其他">三、其他&lt;/h2>
&lt;p>推荐绿老师的介绍视频 &lt;a href="https://www.bilibili.com/video/BV1DY4y1a7YD">https://www.bilibili.com/video/BV1DY4y1a7YD&lt;/a>&lt;/p>
&lt;p>踩坑点：make qemu之后，&lt;strong>按下ctrl+a后松开&lt;/strong>，然后按下&lt;/p>
&lt;ul>
&lt;li>x是退出&lt;/li>
&lt;li>c是进程qemu控制台&lt;/li>
&lt;/ul>
&lt;p>在qemu控制台中，可以通过&lt;code>info mem&lt;/code>、&lt;code>info registers&lt;/code>等指令查看模拟硬件的内容&lt;/p>
&lt;p>再次按下ctrl+a后松开，然后按下c就可以退出qemu控制台&lt;/p></description><category domain="https://zdaneel.github.io/tech/">tech</category></item><item><title>Logisim基础</title><link>https://zdaneel.github.io/tech/logisim%E5%9F%BA%E7%A1%80/</link><guid isPermaLink="true">https://zdaneel.github.io/tech/logisim%E5%9F%BA%E7%A1%80/</guid><pubDate>Wed, 27 Jul 2022 15:50:36 +0800</pubDate><author>z1436910962@gmail.com (leenadz)</author><copyright>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</copyright><description>&lt;h1 id="新手上路实验">新手上路实验&lt;/h1>
&lt;h2 id="一概述">一、概述&lt;/h2>
&lt;p>&lt;a href="https://github.com/Logisim-Ita/Logisim">下载地址&lt;/a>&lt;/p>
&lt;p>使用的是Logisim的Ita版本，支持简体中文&lt;/p>
&lt;p>&lt;a href="https://www.icourse163.org/learn/HUST-1205809816?tid=1450219449#/learn/announce">学习视频地址&lt;/a>&lt;/p>
&lt;h2 id="二案例">二、案例&lt;/h2>
&lt;h3 id="1-led计数电路">1. LED计数电路&lt;/h3>
&lt;p>首先连接好电路&lt;/p>
&lt;img src="https://cdn.jsdelivr.net/gh/ZDaneel/cloudimg@main/img/202203251613313.png" alt="截屏2022-03-25 16.13.00" style="zoom: 33%;" />
&lt;p>之后对电路进行封装：&lt;/p>
&lt;img src="https://cdn.jsdelivr.net/gh/ZDaneel/cloudimg@main/img/202203251613858.png" alt="截屏2022-03-25 16.13.00" style="zoom: 33%;" />
&lt;p>再用封装好的进行测试&lt;/p>
&lt;img src="https://cdn.jsdelivr.net/gh/ZDaneel/cloudimg@main/img/202203251615407.png" alt="截屏2022-03-25 16.15.34" style="zoom:33%;" />
&lt;h3 id="2-五输入编码器">2. 五输入编码器&lt;/h3>
&lt;p>在菜单「工程」中点击「分析组合逻辑电路」，之后就可以对输入输出、表达式、真值表等进行一定操作，使用表达式生成电路&lt;/p>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/ZDaneel/cloudimg@main/img/202207291115284.png" alt="截屏2022-07-29 11.14.51">&lt;/p>
&lt;p>同样进行封装&lt;/p>
&lt;img src="https://cdn.jsdelivr.net/gh/ZDaneel/cloudimg@main/img/202203251618986.png" alt="截屏2022-03-25 16.18.48" style="zoom:33%;" />
&lt;p>再用之前的电路进行测试，此处使用分线器将三个单独位的转成一个三位的二进制数，使用探针可以读取线路上的数据，可以用二进制、有/无符号十进制、十六进制等表示。&lt;/p>
&lt;img src="https://cdn.jsdelivr.net/gh/ZDaneel/cloudimg@main/img/202203251619195.png" alt="截屏2022-03-25 16.19.32" style="zoom:33%;" />
&lt;h3 id="3-七段数码管">3. 七段数码管&lt;/h3>
&lt;p>采用真值表的方式创建电路&lt;/p>
&lt;img src="https://cdn.jsdelivr.net/gh/ZDaneel/cloudimg@main/img/202203251631374.png" alt="截屏2022-03-25 16.31.00" style="zoom:33%;" />
&lt;p>同样进行封装， 再进行测试，注意数码管的连接方式&lt;/p>
&lt;img src="https://cdn.jsdelivr.net/gh/ZDaneel/cloudimg@main/img/202203251633802.png" alt="截屏2022-03-25 16.33.49" style="zoom:33%;" />
&lt;h1 id="数据表示实验">数据表示实验&lt;/h1>
&lt;h2 id="一国际转区位码">一、国际转区位码&lt;/h2>
&lt;p>区位码的十六进制表示+2020H=国标码&lt;/p>
&lt;p>题目要求用加法器来实现，加法器需要转换成补码形式&lt;/p>
&lt;p>区位码=国际码-2020H+FFFFH+00001H&lt;/p>
&lt;p>区位码=国际码+DFE0H&lt;/p>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/ZDaneel/cloudimg@main/img/202204192250612.png" alt="截屏2022-04-19 22.50.52">&lt;/p>
&lt;h2 id="二偶检验">二、偶检验&lt;/h2>
&lt;h3 id="1-偶检验编码">1. 偶检验编码&lt;/h3>
&lt;p>两两异或，实际上就是对全部的位进行异或，也可以只使用一个异或门&lt;/p>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/ZDaneel/cloudimg@main/img/202204201044075.png" alt="截屏2022-04-20 10.44.21">&lt;/p>
&lt;h3 id="2-偶检验检错">2. 偶检验检错&lt;/h3>
&lt;p>就直接用了一个异或门&lt;/p>
&lt;p>右上角不用去管，用分线器把p1信号已经分走了&lt;/p>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/ZDaneel/cloudimg@main/img/202207291045620.png" alt="截屏2022-07-29 10.45.15">&lt;/p>
&lt;h3 id="3-测试">3. 测试&lt;/h3>
&lt;p>检错用于发送和接收双方之间，如果接受信号的发现有错误，就会提示发送方重新发送数据。&lt;/p>
&lt;p>左边显示的是原来的数据，也就是发送方的数据。右边显示的就是接受方的数据，中间有一个干扰屏蔽字，是随机生成的。分别有三个提示信号&lt;/p>
&lt;ul>
&lt;li>数据正确：干扰屏蔽字为00000，也就是没有错误&lt;/li>
&lt;li>检错位：检查到了错误，由于偶检验只能检验出奇数个错误，偶数情况下检错位不会亮起&lt;/li>
&lt;li>误报：针对的就是偶数位情况下的检错位无效，干扰前后两个信号是不同的，于是就误报了&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/ZDaneel/cloudimg@main/img/202204201051132.png" alt="截屏2022-04-20 10.51.52">&lt;/p>
&lt;h2 id="三海明码">三、海明码&lt;/h2>
&lt;p>校验位：P1、P2、P3、P4、P5&lt;/p>
&lt;p>被检验的数据位：D1、D2、D3……D15、D16&lt;/p>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/ZDaneel/cloudimg@main/img/202204201108399.png" alt="image-20220420110856045">&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>检验位&lt;/th>
&lt;th>被检验的数据位&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>P1&lt;/td>
&lt;td>D1 D2 D4 D5 D7 D9 D11 D12 D14 D16&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>P2&lt;/td>
&lt;td>D1 D3 D4 D6 D7 D10 D11 D13 D14&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>P3&lt;/td>
&lt;td>D2 D3 D4 D8 D9 D10 D11 D15 D16&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>P4&lt;/td>
&lt;td>D5 D6 D7 D8 D9 D10 D11&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>P5&lt;/td>
&lt;td>D12 D13 D14 D15 D16&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h1 id="alu实验">ALU实验&lt;/h1>
&lt;h2 id="一1位全加器">一、1位全加器&lt;/h2>
&lt;p>由半加器变化而来，两个加数与一个进位输入，输出和还有进位&lt;/p>
&lt;img src="https://cdn.jsdelivr.net/gh/ZDaneel/cloudimg@main/img/202204011328512.png" alt="截屏2022-04-01 13.27.58" style="zoom:67%;" />
&lt;h2 id="二8位串行进位可控加减法器">二、8位串行进位可控加减法器&lt;/h2>
&lt;h3 id="1-8位加法器">1. 8位加法器&lt;/h3>
&lt;p>首先来解决8位加法器的实现&lt;/p>
&lt;p>OF溢出：针对带符号数，对最高数据位进位和符号位进位进行检测。&lt;/p>
&lt;p>符号位产生进位为C0，最高位产生的进位为C1&lt;/p>
&lt;p>逻辑表达式为：OF = C0⊕C1&lt;/p>
&lt;p>异或门&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align:center">C0&lt;/th>
&lt;th style="text-align:center">C1&lt;/th>
&lt;th style="text-align:center">OF&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align:center">0&lt;/td>
&lt;td style="text-align:center">0&lt;/td>
&lt;td style="text-align:center">0&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">0&lt;/td>
&lt;td style="text-align:center">1&lt;/td>
&lt;td style="text-align:center">1&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">1&lt;/td>
&lt;td style="text-align:center">0&lt;/td>
&lt;td style="text-align:center">1&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">1&lt;/td>
&lt;td style="text-align:center">1&lt;/td>
&lt;td style="text-align:center">0&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/ZDaneel/cloudimg@main/img/202204011346777.png" alt="截屏2022-04-01 13.45.56">&lt;/p>
&lt;h3 id="2-8位可控加减法器">2. 8位可控加减法器&lt;/h3>
&lt;p>运算公式&lt;/p>
&lt;ul>
&lt;li>$[A + B]_补 = [A]_补 + [B]_补$&lt;/li>
&lt;li>$[A - B]_补 = [A]_补 + [-B]_补$&lt;/li>
&lt;/ul>
&lt;p>加减法统一采用加法来处理&lt;/p>
&lt;p>实现减法的核心在于如何求 $[-B]_补$&lt;/p>
&lt;p>$ [-B]_补 = \bar{B} + 1$&lt;/p>
&lt;ul>
&lt;li>+1只需要输入Cin&lt;/li>
&lt;li>对Y进行取反，只需要一个异或门——sub为1时才对Y取反&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align:center">Y&lt;/th>
&lt;th style="text-align:center">Sub&lt;/th>
&lt;th style="text-align:center">res&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align:center">0&lt;/td>
&lt;td style="text-align:center">0&lt;/td>
&lt;td style="text-align:center">0&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">0&lt;/td>
&lt;td style="text-align:center">1&lt;/td>
&lt;td style="text-align:center">1&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">1&lt;/td>
&lt;td style="text-align:center">0&lt;/td>
&lt;td style="text-align:center">1&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">1&lt;/td>
&lt;td style="text-align:center">1&lt;/td>
&lt;td style="text-align:center">0&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/ZDaneel/cloudimg@main/img/202204011412198.png" alt="截屏2022-04-01 14.12.28">&lt;/p>
&lt;p>串行电路最大的问题是，进位按串行传递，速度慢，n位串行加法器从C0到Cn到延迟位2n级门延迟&lt;/p>
&lt;h2 id="三并行进位加法器">三、并行进位加法器&lt;/h2>
&lt;p>如何产生先行进位？&lt;/p>
&lt;h3 id="1cla72182">1.CLA72182&lt;/h3>
&lt;p>基本原理&lt;/p>
&lt;p>&lt;a href="https://www.cnblogs.com/haigege/archive/2011/09/30/2196275.html">先行进位加法器 - oceany - 博客园&lt;/a>&lt;/p>
&lt;p>按照推导出来的公式构建如下的电路&lt;/p>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/ZDaneel/cloudimg@main/img/202207291049501.png" alt="截屏2022-07-29 10.49.01">&lt;/p>
&lt;h3 id="2-4位快速加法器">2. 4位快速加法器&lt;/h3>
&lt;p>Gi = XiYi&lt;/p>
&lt;p>Pi = Xi + Yi（逻辑上实现加法，10得1，01得1，00得0， 11得0，所以采用异或门）&lt;img src="https://cdn.jsdelivr.net/gh/ZDaneel/cloudimg@main/img/202204011550525.png" alt="截屏2022-04-01 15.50.18">&lt;/p>
&lt;h3 id="3-16位快速加法器">3. 16位快速加法器&lt;/h3>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/ZDaneel/cloudimg@main/img/202204011600344.png" alt="截屏2022-04-01 16.00.44">&lt;/p>
&lt;h3 id="4-32位快速加法器">4. 32位快速加法器&lt;/h3>
&lt;img src="https://cdn.jsdelivr.net/gh/ZDaneel/cloudimg@main/img/202204011612666.png" alt="截屏2022-04-01 16.12.13" style="zoom:67%;" />
&lt;h1 id="单周期cpu">单周期CPU&lt;/h1>
&lt;h2 id="一概述-1">一、概述&lt;/h2>
&lt;p>参考文章：24条指令MIPS单周期CPU - 计算机系统硬件设计 - &lt;a href="https://zhuanlan.zhihu.com/p/156818024">知乎专栏&lt;/a>&lt;/p>
&lt;p>总体图采用华科老师的图，单周期也是最简单最基础的一个实现了，老师给的通路图是8条指令的实现，实际的电路多个几个指令。&lt;/p>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/ZDaneel/cloudimg@main/img/202205301934794.png" alt="截屏2022-05-30 19.30.08">&lt;/p>
&lt;h2 id="二数据通路">二、数据通路&lt;/h2>
&lt;p>一点一点开始连线&lt;/p>
&lt;h3 id="1-pc4">1. PC+4&lt;/h3>
&lt;p>使用ctrl+t后进行单步时钟测试，加法器进行加4&lt;/p>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/ZDaneel/cloudimg@main/img/202205301949280.png" alt="截屏2022-05-30 19.49.36">&lt;/p>
&lt;h3 id="2-连接指令存储器">2. 连接指令存储器&lt;/h3>
&lt;p>如果直接连接指令存储器，会发现位宽不匹配，原因在于指令存储器为地址10位，数据位宽为32位的ROM，所以需要从PC里取出2-11位的数据，使用一个分线器即可。&lt;/p>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/ZDaneel/cloudimg@main/img/202205301957630.png" alt="截屏2022-05-30 19.57.33">&lt;/p>
&lt;p>此时可以进行测试，随着PC的运行，可以正常的取指令&lt;/p>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/ZDaneel/cloudimg@main/img/202205302001084.png" alt="截屏2022-05-30 19.57.33">&lt;/p>
&lt;h3 id="3-译码">3. 译码&lt;/h3>
&lt;p>即使用分线器，将指令的不同位连接到寄存器组、控制器和ALU上&lt;/p>
&lt;h4 id="31-r型指令">3.1 R型指令&lt;/h4>
&lt;p>最简单的一个连线&lt;/p>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/ZDaneel/cloudimg@main/img/202205302011843.png" alt="截屏2022-05-30 20.11.28">&lt;/p>
&lt;h4 id="32-i型指令">3.2 I型指令&lt;/h4>
&lt;p>首先处理lw和sw指令，具体原理不再阐述，其中把复位键单独拿出来做成了一个Tunnel，之前的PC复位也改了一下，这样就可以一个按钮控制所有的复位。&lt;/p>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/ZDaneel/cloudimg@main/img/202205302041213.png" alt="截屏2022-05-30 20.41.16">&lt;/p>
&lt;p>接下去处理的是Beq、Bne指令的数据通路，需要增加分支&lt;/p>
&lt;p>红线是因为还没有处理控制器&lt;/p>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/ZDaneel/cloudimg@main/img/202205302107963.png" alt="截屏2022-05-30 21.07.32">&lt;/p>
&lt;p>还需要考虑与立即数的加法，即对立即数进行零拓展&lt;/p>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/ZDaneel/cloudimg@main/img/202205302146855.png" alt="截屏2022-05-30 21.46.23">&lt;/p>
&lt;h4 id="33-j型指令">3.3 J型指令&lt;/h4>
&lt;p>Jmp、J、Jal（这部分老师没细讲，不太熟练）&lt;/p>
&lt;p>Jmp连接的是控制器的Jmp指令，核心在于对26位立即数的处理上，26位立即数对应PC地址的2-27位，其余用0填充，实质上是左移了两位（？&lt;/p>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/ZDaneel/cloudimg@main/img/202205302126560.png" alt="截屏2022-05-30 21.26.05">&lt;/p>
&lt;p>之后实现JR，与JAL搭配使用，&lt;/p>
&lt;p>R1出来的数据返回到PC中，与程序的调用函数有关，调用函数前必须先存储函数起始点的位置，R1读取的数据即31位寄存器内的地址&lt;/p>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/ZDaneel/cloudimg@main/img/202205302148170.png" alt="截屏2022-05-30 21.47.54">&lt;/p>
&lt;p>再之后是JAL，把当前的地址（PC已经加了4）写入寄存器中，1f即31号寄存器&lt;/p>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/ZDaneel/cloudimg@main/img/202205302155395.png" alt="截屏2022-05-30 21.55.01">&lt;/p>
&lt;p>此时有红线很正常，因为没有设计控制信号&lt;/p>
&lt;h3 id="4-补充">4. 补充&lt;/h3>
&lt;p>一开始设计的时候只考虑了基础的指令，而这个对应的是24条指令的电路，所以需要一些额外的设计&lt;/p>
&lt;p>添加Syscall指令对应的电路&lt;/p>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/ZDaneel/cloudimg@main/img/202206012114959.png" alt="截屏2022-06-01 21.14.00">&lt;/p>
&lt;p>对应的Syscall隧道，计算得到Halt停机指令和LedOut指令&lt;/p>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/ZDaneel/cloudimg@main/img/202206012031417.png" alt="截屏2022-06-01 20.31.26">&lt;/p>
&lt;p>给PC添加停机&lt;/p>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/ZDaneel/cloudimg@main/img/202206012032064.png" alt="截屏2022-06-01 20.32.10">&lt;/p>
&lt;p>产生Led的信号&lt;/p>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/ZDaneel/cloudimg@main/img/202206012036587.png" alt="截屏2022-06-01 20.36.49">&lt;/p>
&lt;p>控制总周期数&lt;/p>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/ZDaneel/cloudimg@main/img/202206012033122.png" alt="截屏2022-06-01 20.33.12">&lt;/p>
&lt;h3 id="5-完成">5. 完成&lt;/h3>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/ZDaneel/cloudimg@main/img/202206012115373.png" alt="202206012115373">&lt;/p>
&lt;h2 id="三控制器">三、控制器&lt;/h2>
&lt;p>根据实验给的文件“单周期硬布线控制器表达式自动生成”，通过运算器规格和控制信号产生条件填写真值表&lt;/p>
&lt;ol>
&lt;li>ADD 加法&lt;/li>
&lt;li>ADDI 立即数加&lt;/li>
&lt;li>ADDIU 无符号数立即数加&lt;/li>
&lt;li>ADDU 无符号数加&lt;/li>
&lt;li>AND 与&lt;/li>
&lt;li>ANDI 立即数与&lt;/li>
&lt;li>SLL 逻辑左移&lt;/li>
&lt;li>SRA 算术右移&lt;/li>
&lt;li>SRL 算术右移&lt;/li>
&lt;li>SUB 减&lt;/li>
&lt;li>OR 或&lt;/li>
&lt;li>ORI 立即数或&lt;/li>
&lt;li>NOR 或非&lt;/li>
&lt;li>LW 加载字&lt;/li>
&lt;li>SW 储存字&lt;/li>
&lt;li>BEQ 相等跳转&lt;/li>
&lt;li>BNE 不相等跳转&lt;/li>
&lt;li>SLT 小于置数&lt;/li>
&lt;li>STI 小于立即数置数&lt;/li>
&lt;li>SLTU 小于无符号数置数&lt;/li>
&lt;li>J 无条件转移&lt;/li>
&lt;li>JAL 转移并链接&lt;/li>
&lt;li>JR 转移到指定寄存器中 If $v0==10 halt(停机指令)else 数码管显示$a0值&lt;/li>
&lt;li>SYSCALL 系统调用 If $v0==10 halt(停机指令)else 数码管显示$a0值&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/ZDaneel/cloudimg@main/img/202206011945300.png" alt="截屏2022-06-01 19.45.30">&lt;/p>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/ZDaneel/cloudimg@main/img/202206011945334.png" alt="截屏2022-06-01 19.45.43">&lt;/p>
&lt;p>得到真值表&lt;/p>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/ZDaneel/cloudimg@main/img/202206011956626.png" alt="截屏2022-06-01 19.52.38">&lt;/p>
&lt;p>得到的逻辑表达式，复制到工程的分析组合逻辑电路里，就可以自动生成电路了&lt;/p>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/ZDaneel/cloudimg@main/img/202206011958972.png" alt="截屏2022-06-01 19.56.49">&lt;/p>
&lt;p>将生成的两个组合起来，就完成了硬布线设计（已经连好线了&lt;/p>
&lt;p>此时发现有蓝线的出现，说明还有问题存在，接下去就是找bug环节&lt;/p>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/ZDaneel/cloudimg@main/img/202206012112799.png" alt="">&lt;/p>
&lt;h2 id="四测试">四、测试&lt;/h2>
&lt;p>右击指令存储器编辑内容，打开.hex文件，之后进行测试&lt;/p></description><category domain="https://zdaneel.github.io/tech/">tech</category></item><item><title>Intro to Machine Learning</title><link>https://zdaneel.github.io/tech/intro-to-machine-learning/</link><guid isPermaLink="true">https://zdaneel.github.io/tech/intro-to-machine-learning/</guid><pubDate>Fri, 10 Dec 2021 11:27:21 +0800</pubDate><author>z1436910962@gmail.com (leenadz)</author><copyright>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</copyright><description>&lt;h1 id="intro-to-machine-learning">Intro to Machine Learning&lt;/h1>
&lt;p>kaggle上的&lt;a href="https://www.kaggle.com/learn/intro-to-machine-learning">入门教程&lt;/a>，从代码出发介绍了最基础的机器学习知识&lt;/p>
&lt;h2 id="一模型如何工作">一、模型如何工作&lt;/h2>
&lt;p>decision tree 决策树&lt;/p>
&lt;p>更多的分裂来获得更多的因素，叶子部分是得到的预测结果&lt;/p>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/ZDaneel/cloudimg@main/img/202112081517347.png" alt="Depth 2 Tree">&lt;/p>
&lt;p>model -&amp;gt; train -&amp;gt; predict&lt;/p>
&lt;p>用一张蒲公英书里的图：&lt;/p>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/ZDaneel/cloudimg@main/img/202112081339772.png" alt="来自蒲公英书">&lt;/p>
&lt;h2 id="二使用pandas库处理数据">二、使用Pandas库处理数据&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">pandas&lt;/span> &lt;span class="k">as&lt;/span> &lt;span class="nn">pd&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 保存路径&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">path&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;../xxx.csv&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 在一个DataFrame(df)里读取和存储数据&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">df&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">pd&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">read_csv&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">path&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 打印简要 DataFrame.describe()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">df&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">describe&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>DataFrame.describe()&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="o">&amp;gt;&amp;gt;&amp;gt;&lt;/span> &lt;span class="n">s&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">pd&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Series&lt;/span>&lt;span class="p">([&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">3&lt;/span>&lt;span class="p">])&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">&amp;gt;&amp;gt;&amp;gt;&lt;/span> &lt;span class="n">s&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">describe&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">count&lt;/span> &lt;span class="mf">3.0&lt;/span> &lt;span class="c1"># 非空值的数量&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">mean&lt;/span> &lt;span class="mf">2.0&lt;/span> &lt;span class="c1"># 平均值&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">std&lt;/span> &lt;span class="mf">1.0&lt;/span> &lt;span class="c1"># standard deviation 标准偏差&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">min&lt;/span> &lt;span class="mf">1.0&lt;/span> &lt;span class="c1"># 最小值&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="mi">25&lt;/span>&lt;span class="o">%&lt;/span> &lt;span class="mf">1.5&lt;/span> &lt;span class="c1"># 第25百分位数 &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="mi">50&lt;/span>&lt;span class="o">%&lt;/span> &lt;span class="mf">2.0&lt;/span> &lt;span class="c1"># 第50百分位数&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="mi">75&lt;/span>&lt;span class="o">%&lt;/span> &lt;span class="mf">2.5&lt;/span> &lt;span class="c1"># 第75百分位数&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">max&lt;/span> &lt;span class="mf">3.0&lt;/span> &lt;span class="c1">#最大值&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">dtype&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">float64&lt;/span> &lt;span class="c1">#数据类型&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="三机器学习模型">三、机器学习模型&lt;/h2>
&lt;h3 id="为模型选取合适的数据model">为模型选取合适的数据（Model）&lt;/h3>
&lt;p>DataFrame的列：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">df&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">columns&lt;/span> &lt;span class="c1"># 每一列的名称列表&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>dropna drops missing values 丢失缺失值&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">df&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">df&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">dropna&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">axis&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1"># na:not available&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="选择预测的目标prediction-target">选择预测的目标（Prediction Target）&lt;/h3>
&lt;p>使用点表示法（dot notation）来选择想要预测的列，该列被称为预测目标，使用 &lt;strong>y&lt;/strong> 来标识&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">y&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">df&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">XXX&lt;/span> &lt;span class="c1"># XXX为想要预测的列名 &lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="选择特征features">选择特征（Features）&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">df_features&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;A&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;B&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;C&amp;#39;&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="c1"># A、B、C是想要作为特征的列名 涉及到最优特征&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>按照惯例，使用 &lt;strong>x&lt;/strong> 来标识&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">x&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">df&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">df_features&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>使用head()方法显示数组的头几行&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">x&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">head&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="建立模型">建立模型&lt;/h3>
&lt;p>文章使用了&lt;strong>scikit-learn&lt;/strong>来建立模型&lt;/p>
&lt;p>建立和使用的步骤是：&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Define（定义）：&lt;/strong> 什么类型的模型 同时也指定参数&lt;/li>
&lt;li>&lt;strong>Fit（拟合）：&lt;/strong> 从提供的数据获得模式（pattern），模型的核心&lt;/li>
&lt;li>&lt;strong>Predict（预测）：&lt;/strong> 预测值&lt;/li>
&lt;li>&lt;strong>Evaluate（评估）：&lt;/strong> 评估预测的准确率&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">sklearn.tree&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">DecisionTreeRegressor&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 定义一个模型，random_state=1保证每次运行都有相同的结果&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">xxx_model&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">DecisionTreeRegressor&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">random_state&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Fit（拟合）模型&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">xxx_model&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">fit&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">y&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>预测：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;The predictions are&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">xxx_model&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">predict&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">head&lt;/span>&lt;span class="p">()))&lt;/span> &lt;span class="c1">#对头几列进行预测 &lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="四模型验证">四、模型验证&lt;/h2>
&lt;p>衡量模型的质量，更好地迭代模型，一般通过准确性来衡量，即预测的和实际的之间的差距&lt;/p>
&lt;p>首先要做的是，把模型质量总结为一种可理解的方式&lt;/p>
&lt;p>有很多衡量的方法，比如：&lt;/p>
&lt;ul>
&lt;li>MAE（Mean Absolute Error）平均绝对误差&lt;/li>
&lt;/ul>
&lt;p>$$
\frac{1}{m} \sum_{i=1}^{m} \mid\left(y_{i}-\hat{y_{i}}\right)\mid
$$&lt;/p>
&lt;ul>
&lt;li>MSE（Mean Square Error）均方误差&lt;/li>
&lt;/ul>
&lt;p>$$
\frac{1}{m} \sum_{i=1}^{m}\left(y_{i}-\hat{y_{i}}\right)^{2}
$$&lt;/p>
&lt;p>MAE举例：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">sklearn.metrics&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">mean_absolute_error&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">predicted_xxx&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">xxx_model&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">predict&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1"># 模型通过数据集预测&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">mean_absolute_error&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">y&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">predicted_xxx&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1"># 计算mae&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>模型的实用价值体现在对新数据的预测上，所以可以在模型构建的时候取出一些数据，然后使用这些数据来测试模型对之前数据的准确性。此数据就被称为验证数据。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">sklearn.model_selection&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">train_test_split&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 把数据分为训练集和验证集 random_state确保每一次&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">train_x&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">val_x&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">train_y&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">val_y&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">train_test_split&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">y&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">random_state&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 定义模型&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">xxx_model&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">DecisionTreeRegressor&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Fit model&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">xxx_model&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">fit&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">train_x&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">train_y&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 在验证集上计算mae&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">val_predictions&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">xxx_model&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">predict&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">val_x&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">mean_absolute_error&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">val_y&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">val_predictions&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="五欠拟合和过拟合">五、欠拟合和过拟合&lt;/h2>
&lt;p>过拟合（overfitting）：即一个模型与训练数据几乎完美匹配，但在验证时在新数据时表现不佳&lt;/p>
&lt;p>欠拟合（underfitting）：一个模型不能捕捉到数据中重要的区别和模式，所以即使在训练数据时也表现不佳&lt;/p>
&lt;p>我们要在这两个之间找到一个甜蜜点（sweet spot），方法是收集多样化的样本，简化模型，交叉检验。&lt;/p>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/ZDaneel/cloudimg@main/img/202112092119970.png" alt="underfitting_overfitting">&lt;/p>
&lt;h2 id="六随机森林random-forests">六、随机森林（Random Forests）&lt;/h2>
&lt;p>选择性能更好的模型。如随机森林，使用许多树，通过平均每个组件树的预测值来进行预测。&lt;/p></description><category domain="https://zdaneel.github.io/tech/">tech</category></item><item><title>DFS求集合所有子集</title><link>https://zdaneel.github.io/tech/dfs%E6%B1%82%E9%9B%86%E5%90%88%E6%89%80%E6%9C%89%E5%AD%90%E9%9B%86/</link><guid isPermaLink="true">https://zdaneel.github.io/tech/dfs%E6%B1%82%E9%9B%86%E5%90%88%E6%89%80%E6%9C%89%E5%AD%90%E9%9B%86/</guid><pubDate>Wed, 10 Nov 2021 11:27:21 +0800</pubDate><author>z1436910962@gmail.com (leenadz)</author><copyright>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</copyright><description>&lt;p>对应代码中的数组b，空集为空行&lt;/p>
&lt;p>&lt;img src="https://img-blog.csdnimg.cn/20200215023541807.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzYxOTA4NQ==,size_16,color_FFFFFF,t_70" alt="dfs集合子集">&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nn">java.util.ArrayList&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="cm">/**
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * DFS求数组的全部子集
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> */&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">class&lt;/span> &lt;span class="nc">Try001&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">//a为原数组，b为子集，n计数&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">static&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">dfs&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ArrayList&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Integer&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">a&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">ArrayList&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Integer&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">b&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="p">){&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">==&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">a&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">size&lt;/span>&lt;span class="p">())&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">//终止条件&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">//输出子集的值，空行代表空集&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">for&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Integer&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">integer&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">b&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">System&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">integer&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34; &amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">System&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="c1">//换行&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">//选择添加&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">b&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">add&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">a&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">get&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="p">));&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">dfs&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">a&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">b&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">//不选择添加&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">b&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">remove&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">a&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">get&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="p">));&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">dfs&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">a&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">b&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">static&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">main&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="o">[]&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">args&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">ArrayList&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Integer&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">a&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">ArrayList&lt;/span>&lt;span class="o">&amp;lt;&amp;gt;&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">ArrayList&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Integer&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">b&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">ArrayList&lt;/span>&lt;span class="o">&amp;lt;&amp;gt;&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">for&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;lt;=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">3&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="p">){&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">a&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">add&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="c1">//初始化集合&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">dfs&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">a&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">b&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">0&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></description><category domain="https://zdaneel.github.io/tech/">tech</category></item></channel></rss>